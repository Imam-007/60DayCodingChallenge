/*
Given a binary string S consists only of 0s and 1s. The task is to calculate the number of substrings that have more 1s than 0s.

Example 1:

Input:
S = "011"
Output: 4
Explanation: There are 4 substring which 
has more 1s than 0s. i.e "011","1","11" and "1"

*/

class Solution {
    long countSubstring(String S){
        long count = 0, numOfZeroes = 0;
        int zeroIndex = S.length();

        int frequency[] = new int[2 * S.length() + 5];

        int currentCount=zeroIndex;

        // Iterate through the string and update the count of zeroes and ones
        for(int i = 0; i < S.length(); i++){
            if(S.charAt(i) == '0')
                currentCount--;
            else
                currentCount++;

            if(currentCount <= zeroIndex){
                numOfZeroes++;
            }
            frequency[currentCount]++;
        }

        // Iterate through the string again and update the count of substrings
        for(int i = 0; i < S.length(); i++){
            count += (S.length() - i - numOfZeroes) * 1l;

            if(S.charAt(i) == '1'){
                frequency[zeroIndex+1]--;
                zeroIndex++;
                numOfZeroes += frequency[zeroIndex];
            }
            else{
                frequency[zeroIndex-1]--;
                zeroIndex--;
                numOfZeroes--;
                numOfZeroes -= frequency[zeroIndex+1];
            }
        }

        return count;
       
    }
}

/*
Given a String S, reverse the string without reversing its individual words. Words are separated by dots.

Example 1:

Input:
S = i.like.this.program.very.much
Output: much.very.program.this.like.i
Explanation: After reversing the whole
string(not individual words), the input
string becomes
much.very.program.this.like.i

*/
class Solution 
{
    //Function to reverse words in a given string.
    String reverseWords(String S)
    {
        // code here 
        String str="";
        int i=0;
        int len=S.length();
        int r=len;
        for(i=len-1;i>=0;i--){
            if(S.charAt(i)=='.'){
                str=str+S.substring(i+1,r)+".";
                r=i;
            }
        }
        str=str+S.substring(i+1,r);
        return str;
    }
}
